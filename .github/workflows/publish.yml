name: Publish Packages

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      package:
        description: 'パッケージを選択'
        required: true
        default: 'core'
        type: choice
        options:
          - core
          - react
          - solid

permissions:
  contents: write
  id-token: write

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      core-changed: ${{ steps.changes.outputs.core }}
      react-changed: ${{ steps.changes.outputs.react }}
      solid-changed: ${{ steps.changes.outputs.solid }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            core:
              - 'core/src/**'
              - 'core/package.json'
            react:
              - 'react/src/**'
              - 'react/package.json'
            solid:
              - 'solid/src/**'
              - 'solid/package.json'

  publish-core:
    needs: detect-changes
    if: |
      (github.event_name == 'push' && needs.detect-changes.outputs.core-changed == 'true') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.package == 'core')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
          
      - uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install dependencies for core
        run: |
          cd core
          npm install
          
      - name: Run tests for core
        run: |
          cd core
          npm test
          
      - name: Build and publish core
        run: |
          cd core
          npm run build
          npm version patch
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Get new core version
        id: core-version
        run: |
          cd core
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          
      - name: Update react dependency
        run: |
          cd react
          npm install @e-state/core@${{ steps.core-version.outputs.version }}
          
      - name: Update vite-example dependencies
        run: |
          cd react/vite-example
          npm install
          cd ..
          npm install
          
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "feat: update core to v${{ steps.core-version.outputs.version }} and sync dependencies

          🤖 Generated with GitHub Actions"
          git push

  publish-react:
    needs: detect-changes
    if: |
      (github.event_name == 'push' && needs.detect-changes.outputs.react-changed == 'true') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.package == 'react')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
          
      - uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install dependencies for react
        run: |
          cd react
          npm install
          
      - name: Build and publish react
        run: |
          cd react
          npm run build
          npm version patch
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Update vite-example dependencies
        run: |
          cd react/vite-example
          npm install
          
      - name: Get new react version
        id: react-version
        run: |
          cd react
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "feat: update react to v${{ steps.react-version.outputs.version }} and sync dependencies

          🤖 Generated with GitHub Actions"
          git push

  publish-solid:
    needs: detect-changes
    if: |
      (github.event_name == 'push' && needs.detect-changes.outputs.solid-changed == 'true') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.package == 'solid')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
          
      - uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install dependencies for solid
        run: |
          cd solid
          npm install
          
      - name: Build and publish solid
        run: |
          cd solid
          npm run build
          npm version patch
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Get new solid version
        id: solid-version
        run: |
          cd solid
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "feat: update solid to v${{ steps.solid-version.outputs.version }}

          🤖 Generated with GitHub Actions"
          git push